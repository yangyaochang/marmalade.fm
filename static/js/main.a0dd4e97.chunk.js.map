{"version":3,"sources":["components/PlayMix.js","components/PlayButton.js","components/FeatureMix.js","components/Header.js","components/Mix.js","components/Home.js","components/Archive.js","components/About.js","data/mixes.js","components/App.js","serviceWorker.js","index.js"],"names":["PlayMix","props","playMix","id","currentMix","playing","children","className","onClick","PlayButton","FeatureMix","name","pictures","style","backgroundImage","extra_large","Header","exact","to","Mix","Home","mixes","slice","map","mix","key","Archive","Stat","statName","statNumber","statWord","marginRight","About","length","reduce","acc","cur","play_count","audio_length","App","fetchMixes","a","state","mixIds","fetch","response","json","data","setState","prevState","console","log","mountAudio","widget","Mixcloud","PlayerWidget","player","ready","events","pause","on","play","actions","tooglePlay","togglePlay","mixName","load","palying","mixesData","this","firstMix","path","width","height","src","frameBorder","ref","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","message"],"mappings":"2UAWeA,EATC,SAAAC,GAAU,IAAD,iBACoCA,GAAlDC,EADc,EACdA,QAASC,EADK,EACLA,GAAIC,EADC,EACDA,WAAYC,EADX,EACWA,QAASC,EADpB,EACoBA,SACrC,OACI,yBAAKC,UAAS,kBAAeJ,IAAOC,GAAcC,GAAW,WAAaG,QAAW,kBAAMN,EAAQC,KAC9FG,ICEFG,EANI,kBACf,6BACI,4BAAQF,UAAY,yFCiBbG,EAhBI,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,KAAmC,IAA7BC,gBAA6B,MAAlB,GAAkB,EAAXX,EAAW,mCACpD,OACI,yBACAM,UAAY,mHACZM,MAAS,CAACC,gBAAgB,OAAD,OAASF,EAASG,YAAlB,OACrB,kBAAC,EAAYd,EACT,yBAAKM,UAAY,6BACb,uBAAGA,UAAY,0BAAf,gBACA,wBAAIA,UAAY,qCAAqCI,GACrD,kBAAC,EAAD,UCULK,EArBA,SAAAf,GACX,OACI,4BAAQM,UAAY,kBAChB,wBAAIA,UAAY,qCAAhB,gBACA,wBAAIA,UAAY,gCACZ,wBAAIA,UAAY,OAGZ,kBAAC,IAAD,CAASU,OAAK,EAACC,GAAK,gBAAgBX,UAAY,2CAAhD,eAEJ,wBAAIA,UAAY,OACZ,kBAAC,IAAD,CAASW,GAAK,wBAAwBX,UAAY,2CAAlD,YAEJ,wBAAIA,UAAY,OACZ,kBAAC,IAAD,CAASW,GAAK,sBAAsBX,UAAY,2CAAhD,aCKLY,EAlBH,SAAC,GAAgC,IAA/BR,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAaX,EAAW,mCACxC,OACI,yBACIM,UAAY,kEACZM,MAAS,CAACC,gBAAgB,OAAD,OAASF,EAASG,YAAlB,OAEzB,kBAAC,EAAYd,EACT,yBAAKM,UAAU,4CACX,yBAAKA,UAAU,kCACX,wBAAIA,UAAU,8CAA8CI,GAC5D,kBAAC,EAAD,WCETS,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAUpB,EAAW,yBAChC,OACI,yBAAKM,UAAY,kDACZc,EAAMC,MAAM,EAAG,GAAGC,KAAI,SAAAC,GAAG,OACtB,yBAAKjB,UAAY,WAEjB,kBAAC,EAAD,iBAASN,EAAWuB,EAApB,CAAyBrB,GAAMqB,EAAIC,aCcpCC,EAnBC,SAAC,GAAuB,IAAtBL,EAAqB,EAArBA,MAAUpB,EAAW,yBACnC,OACI,wBAAIM,UAAY,mCACXc,EAAME,KAAI,SAAAC,GAAG,OACV,wBAAIjB,UAAY,aACZ,kBAAC,EAAD,iBAAaN,EAAb,CAAoBE,GAAMqB,EAAIC,MAC9B,yBAAKlB,UAAY,0DACb,wBAAIA,UAAY,gCACXiB,EAAIb,MAET,kBAAC,EAAD,cCZlBgB,EAAO,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SACjC,OACI,yBAAKvB,UAAY,sCAAsCM,MAAS,CAACkB,aAAc,IAC3E,yBAAKxB,UAAY,kBAAkBqB,GACnC,yBAAKrB,UAAY,kCAAkCsB,EAAnD,IAAgEC,KA2B7DE,EAtBD,SAAC,GAAa,IAAZX,EAAW,EAAXA,MACZ,OACI,yBAAKd,UAAY,aACb,yBAAKA,UAAY,iCACb,uBAAGA,UAAY,OAAf,oFAGA,iJAMJ,yBAAKA,UAAY,YACb,kBAAC,EAAD,CAAMqB,SAAW,eAAeC,WAAcR,EAAMY,OAAQH,SAAW,UACvE,kBAAC,EAAD,CAAMF,SAAW,YAAYC,WAAcR,EAAMa,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,EAAIC,aAAY,GAAIP,SAAW,UAC3G,kBAAC,EAAD,CAAMF,SAAW,UAAUC,WAAcR,EAAMa,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,EAAIE,eAAc,GAAIR,SAAW,eCb5GT,EAdD,CACV,4CACA,0DACA,0CACA,iDACA,0DACA,wDACA,4CACA,8DACA,mCACA,4CACA,0DCoHWkB,E,kDA9Gb,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IAeRuC,WAhBmB,sBAgBN,sBAAAC,EAAA,sDACM,EAAKC,MAAfC,OAEApB,IAAP,uCAAW,WAAMpB,GAAN,iBAAAsC,EAAA,+EAEgBG,MAAM,2BAAD,OAA4BzC,IAFjD,cAED0C,EAFC,gBAGYA,EAASC,OAHrB,OAGDC,EAHC,OAIP,EAAKC,UAAS,SAACC,EAAWhD,GAAZ,MAAuB,CACnCoB,MAAM,GAAD,mBAAM4B,EAAU5B,OAAhB,CAAuB0B,QALvB,kDAQPG,QAAQC,IAAR,MARO,0DAAX,uDAHW,2CAhBM,EAgCnBC,WAhCmB,sBAgCN,sBAAAX,EAAA,6DAEX,EAAKY,OAASC,SAASC,aAAa,EAAKC,QAF9B,SAGL,EAAKH,OAAOI,MAHP,OAIX,EAAKJ,OAAOK,OAAOC,MAAMC,IAAG,WAC1B,EAAKZ,SAAS,CACZ3C,SAAS,OAGb,EAAKgD,OAAOK,OAAOG,KAAKD,IAAG,WACzB,EAAKZ,SAAS,CACZ3C,SAAQ,OAXD,2CAhCM,EAiDnByD,QAAU,CACRC,WAAY,WACV,EAAKV,OAAOW,cAEd9D,QAAS,SAAC+D,GAER,GAAIA,IADe,EAAKvB,MAAMtC,WAE5B,OAAO,EAAKiD,OAAOU,aAGrB,EAAKf,SAAS,CACZ5C,WAAY6D,IAEd,EAAKZ,OAAOa,KAAKD,GAAS,KA5D5B,EAAKvB,MAAQ,CACXyB,SAAS,EACT/D,WAAY,GACZuC,OAAQyB,EACR5C,IAAK,KACLH,MAAO,IAPQ,E,gEAYjBgD,KAAKjB,aACLiB,KAAK7B,e,+BAqDG,IAAD,qBACiB6B,KAAK3B,MAAMrB,MAD5B,MACAiD,OADA,MACW,GADX,EAGP,OAEE,kBAAC,IAAD,KAEE,yBAAK/D,UAAU,OAEb,yBAAKA,UAAY,sBAEf,kBAAC,EAAD,iBAAgB8D,KAAK3B,MAAW2B,KAAKP,QAAaQ,EAAlD,CAA4DnE,GAAMmE,EAAS7C,OAC3E,yBAAKlB,UAAY,yBAEf,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOU,OAAK,EAACsD,KAAK,iBAChB,kBAAC,EAAD,iBAAUF,KAAK3B,MAAW2B,KAAKP,WAEjC,kBAAC,IAAD,CAAOS,KAAK,yBACV,kBAAC,EAAD,iBAAaF,KAAK3B,MAAW2B,KAAKP,WAEpC,kBAAC,IAAD,CAAOS,KAAK,uBACV,kBAAC,EAAUF,KAAK3B,WAMxB,4BACEnC,UAAY,wBACZiE,MAAM,OACNC,OAAO,KACPC,IAAI,kGACJC,YAAY,IACZC,IAAO,SAAApB,GAAM,OAAI,EAAKA,OAASA,W,GAvGzBqB,aCJEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAchC,MACrBiC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5C,QAAQ4C,MAAMA,EAAMC,c","file":"static/js/main.a0dd4e97.chunk.js","sourcesContent":["import React from 'react';\n\nconst PlayMix = props => {\n    const {playMix, id, currentMix, playing, children} = {...props}\n        return (\n            <div className = {`pointer ${id === currentMix && playing && 'playing'}`} onClick = {() => playMix(id)}>\n                {children}\n            </div>\n        )\n}\n\nexport default PlayMix","import React from 'react';\n\nconst PlayButton = () => (\n    <div> \n        <button className = 'button bg-transparent contain button-reset play-button db bg-center pointer center'></button>\n    </div>\n)\n\nexport default PlayButton","import React, {Component} from 'react';\nimport PlayMix from './PlayMix'\nimport PlayButton from './PlayButton'\n\n\nconst FeatureMix = ({name, pictures = {}, ...props}) => {\n    return (\n        <div \n        className = 'w-50-l vh-100 flex items-center justify-center cover bg-center bg-featured pad-bottom fixed-l left-0 mix-overlay'\n        style = {{backgroundImage: `url(${pictures.extra_large})`}}>\n            <PlayMix {...props}>\n                <div className = 'w-100 tc pa3 relative z-2'>\n                    <p className = 'b biryani f6 white ttu'>Featured Mix</p>\n                    <h1 className = 'mix-title mt0 mb2 anton white ttu'>{name}</h1>\n                    <PlayButton/>\n                </div>\n            </PlayMix>\n        </div>\n    )\n}\n\nexport default FeatureMix\n","import React, {Component} from 'react';\nimport {NavLink} from \"../../node_modules/react-router-dom\";\n\nconst Header = props => {\n    return (\n        <header className = 'black mb5 pt5 '>\n            <h1 className = 'ttu tracked-mega anton tc mt0 mb3'>Marmalade.fm</h1>\n            <ul className = 'list flex justify-center pl0'>\n                <li className = 'mh2'>\n                    {/* we use NavLink component to give us active styles when we're on the current page */}\n                    {/* Using the exact prop makes sure it matches exactly */}\n                    <NavLink exact to = '/marmalade.fm' className = 'nav-link link biryani-black f6 ttu gray'>What's hot</NavLink>\n                </li>\n                <li className = 'mh2'>\n                    <NavLink to = '/marmalade.fm/archive' className = 'nav-link link biryani-black f6 ttu gray'>Archive</NavLink>\n                </li>\n                <li className = 'mh2'>\n                    <NavLink to = '/marmalade.fm/about' className = 'nav-link link biryani-black f6 ttu gray'>About</NavLink>\n                </li>\n            </ul>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport Playbutton from './PlayButton'\nimport PlayMix from './PlayMix'\n\nconst Mix = ({name, pictures, ...props}) => {\n    return (\n        <div \n            className = 'aspect-ratio aspect-ratio--3x4 pointer bg-black cover bg-center'\n            style = {{backgroundImage: `url(${pictures.extra_large})`}}\n        >\n            <PlayMix {...props}>\n                <div className=\"ph3 pv4 aspect-ratio--object mix-overlay\">\n                    <div className=\"flex items-center relative z-2\">\n                        <h1 className=\"f4 f3-l mv0 white ttu biryani pr2 lh-title\">{name}</h1>\n                        <Playbutton/>\n                    </div>\n                </div>\n            </PlayMix>\n        </div>\n    )\n}\n\nexport default Mix\n","import React from 'react';\nimport Mix from './Mix'\n\nconst Home = ({mixes, ...props}) => {\n    return (\n        <div className = 'flex flex-wrap justify-between mixes ph3 ph4-l'>\n            {mixes.slice(0, 6).map(mix => (\n                <div className = 'mix mb4'>\n                {/* props come from App Component, pass them to Mix component */}\n                <Mix {...props} {...mix} id = {mix.key}/>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Home","import React from 'react';\nimport PlayButton from './PlayButton' \nimport PlayMix from './PlayMix'\n\nconst Archive = ({mixes, ...props}) => {\n    return (\n        <ul className = 'list pl0 archive mv0 pad-bottom'>\n            {mixes.map(mix => (\n                <li className = 'ph3 ph4-l'>\n                    <PlayMix {...props} id = {mix.key}>\n                    <div className = 'pv3 bb b--light-gray flex justify-between items-center'>\n                        <h1 className = 'f6 mv0 black ttu biryani pr2'>\n                            {mix.name}\n                        </h1>\n                        <PlayButton/>\n                    </div>\n                    </PlayMix>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nexport default Archive\n","import React from 'react';\n\nconst Stat = ({statName, statNumber, statWord}) => {\n    return (\n        <div className = 'w-third tc pa3 ba bw2 b--light-gray' style = {{marginRight: -2}}>\n            <div className = 'f6 biryani ttu'>{statName}</div>\n            <div className = 'f5 b bityani-black ttu tracked'>{statNumber} {statWord}</div>\n        </div>\n    )\n}\n\nconst About = ({mixes}) => {\n    return (\n        <div className = 'ph3 ph4-l'>\n            <div className = 'measure center lh-copy f4 ph3'>\n                <p className = 'mt0'>\n                    Marmalade.fm features the latest and greatest in grooves, beats and world music.\n                </p>\n                <p>\n                    Whether you're into hip hop, trip hop, classic jazz, fusion jass, afro beat or break beat...\n                    we have you covered!\n                </p>\n            </div>\n\n            <div className = 'flex pt3'>\n                <Stat statName = 'Featuring...' statNumber = {mixes.length} statWord = 'mixes'/>\n                <Stat statName = 'Played...' statNumber = {mixes.reduce((acc, cur) => acc + cur.play_count, 0)} statWord = 'times'/>\n                <Stat statName = 'With...' statNumber = {mixes.reduce((acc, cur) => acc + cur.audio_length, 0)} statWord = 'seconds'/>\n            </div>\n        </div>\n    )\n}\n\nexport default About","const mixes = [\n    '/maxvibes/ninja-tune-jazz-session-part-1/',\n    '/NTSRadio/mint-condition-w-hotthobo-27th-november-2017/',\n    '/NTSRadio/full-house-6th-november-2017/',\n    '/NTSRadio/questing-w-zakia-12th-november-2017/',\n    '/NTSRadio/foreign-hour-family-edition-4th-october-2017/',\n    '/truthoughts/tru-thoughts-15th-anniversary-lefto-mix/',\n    '/adamkvasnica3/trip-hop-for-jazz-junkies/',\n    '/NTSRadio/floating-points-four-tet-caribou-23rd-march-2015/',\n    '/NTSRadio/bonobo-24th-june-2015/',\n    '/NTSRadio/floating-points-12th-june-2017/',\n    '/NTSRadio/mount-kimbie-james-blake-8th-september-2015/'\n];\n\nexport default mixes;","/*global Mixcloud*/\nimport React, {Component} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"../../node_modules/react-router-dom\";\nimport FeatureMix from './FeatureMix'\nimport Header from './Header'\nimport Home from './Home'\nimport Archive from './Archive'\nimport About from './About'\nimport mixesData from '../data/mixes'\n\n\n\nclass App extends Component{\n  constructor(props) {\n    super(props)\n    this.state = {\n      palying: false,\n      currentMix: '',\n      mixIds: mixesData,\n      mix: null,\n      mixes: []\n    }\n  }\n\n  componentDidMount() {\n    this.mountAudio()\n    this.fetchMixes()\n  }\n\n  fetchMixes = async() => {\n    const {mixIds} = this.state\n\n    mixIds.map(async id => {\n      try {\n        const response = await fetch(`https://api.mixcloud.com${id}`)\n        const data = await response.json()\n        this.setState((prevState, props) => ({\n          mixes: [...prevState.mixes, data]\n        }))\n      } catch(error) {\n        console.log(error)\n      }\n    })\n  }\n\n  mountAudio = async() => {\n    // have the access to the Mixcloud object from MixCloud API\n    this.widget = Mixcloud.PlayerWidget(this.player)\n    await this.widget.ready\n    this.widget.events.pause.on(() => {\n      this.setState({\n        playing: false\n      })\n    })\n    this.widget.events.play.on(() => {\n      this.setState({\n        playing:true\n      })\n    })\n  }\n\n  // this is an object literal\n  actions = {\n    tooglePlay: () => {\n      this.widget.togglePlay()\n    }, \n    playMix: (mixName) => {\n      const currentMix = this.state.currentMix\n      if (mixName === currentMix) {\n        return this.widget.tooglePlay()\n      }\n      \n      this.setState({\n        currentMix: mixName\n      })\n      this.widget.load(mixName, true)\n    }\n  }\n\n  render() {\n    const [firstMix = {}] = this.state.mixes\n\n    return (\n      // the Router component wraps out the whole page and lets us use react-router\n      <Router>\n        {/* // this div contains everything */}\n        <div className=\"App\">\n          {/* this div contains our page (excluding audio player)*/}\n          <div className = 'flex-l justify-end'>\n            {/* FeatureMix (needs styling and updating) */}\n            <FeatureMix {...this.state} {...this.actions} {...firstMix} id = {firstMix.key}/>\n            <div className = 'w-50-l relative z-1  '>\n              {/* Header (needs styling and updating) */}\n              <Header/>\n              {/* Routed Page */}\n              <Switch>\n                <Route exact path=\"/marmalade.fm\">\n                  <Home {...this.state} {...this.actions}/>\n                </Route>\n                <Route path=\"/marmalade.fm/archive\">\n                  <Archive {...this.state} {...this.actions}/>\n                </Route>\n                <Route path=\"/marmalade.fm/about\">\n                  <About {...this.state}/>\n                </Route>\n              </Switch>\n            </div>\n          </div>\n          {/* AudioPlayer */}\n          <iframe \n            className = 'db fixed bottom-0 z-5'\n            width=\"100%\" \n            height=\"60\" \n            src=\"https://www.mixcloud.com/widget/iframe/?hide_cover=1&mini=1&feed=%2Fbrooklynradio%2F100-funk%2F\" \n            frameBorder=\"0\" \n            ref = {player => this.player = player}>\n          </iframe>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport tachyons from '../node_modules/tachyons'\nimport './css/main.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}